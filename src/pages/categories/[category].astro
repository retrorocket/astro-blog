---
import config from "@config/config.json";
import Base from "@layouts/Base.astro";
import Pagination from "@layouts/components/Pagination.astro";
import Post from "@layouts/partials/Post.astro";
import PostList from "@layouts/PostList.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import { getTaxonomy } from "@lib/taxonomyParser.astro";
import { sortByDate } from "@lib/utils/sortFunctions";
import taxonomyFilter from "@lib/utils/taxonomyFilter";
import { humanize } from "@lib/utils/textConverter";

const { pagination } = config.settings;

export const getStaticPaths = async () => {
  const categories = await getTaxonomy("categories");
  return categories.map((category) => {
    return {
      params: { category },
    };
  });
};

const { category } = Astro.params;
const humanizedCategory = humanize(category ?? "");
const sortByDatePosts = sortByDate(await getCollection("posts"));
const filterByTags: CollectionEntry<"posts">[] = taxonomyFilter(
  sortByDatePosts,
  "categories",
  category,
);
const totalPages = Math.ceil(filterByTags.length / pagination);
---

<Base
  title={`${humanizedCategory} の記事一覧`}
  canonical={`categories/${category}`}
>
  <PostList>
    <h1 class="h2 pb-10">
      Posts related to <span class="text-primary">{humanizedCategory}</span>
       category
    </h1>
    {filterByTags.slice(0, pagination).map((post) => <Post post={post} />)}
    <Pagination
      section={`categories/${category}`}
      currentPage={1}
      totalPages={totalPages}
    />
  </PostList>
</Base>
