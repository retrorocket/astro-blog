---
import dateFormat from "@lib/utils/dateFormat";
import { humanize, markdownify, slugify } from "@lib/utils/textConverter";
import { render, type CollectionEntry } from "astro:content";
import { BiCalendarEdit, BiRevision } from "react-icons/bi";

type Props = { post: CollectionEntry<"posts"> };
const { post } = Astro.props;
const { Content } = await render(post);
const { title, categories, date, modified_date } = post.data;
---

<section class="section">
  <div class="container">
    <div class="sub-container">
      <div class="mx-auto lg:col-10">
        <div
          class="break-words py-8 md:p-[60px]"
          role="main"
          itemprop="mainEntityOfPage"
          itemscope="itemscope"
          itemtype="https://schema.org/Blog"
        >
          <article
            itemscope="itemscope"
            itemtype="https://schema.org/BlogPosting"
            itemprop="blogPost"
          >
            <h1 itemprop="headline" set:html={markdownify(title)} />
            <ul
              class="mb-8 mt-4 inline-flex flex-wrap items-center gap-x-3 gap-y-1 text-text dark:text-text-dark"
            >
              <li class="flex flex-wrap items-center">
                <BiCalendarEdit className="mr-2" />
                <time datetime={dateFormat(date)} itemprop="datePublished"
                  >{dateFormat(date, "yyyy-MM-dd")}</time
                >
              </li>
              {
                modified_date && (
                  <li class="flex flex-wrap items-center">
                    <BiRevision className="mr-2" />
                    <time
                      datetime={dateFormat(modified_date)}
                      itemprop="dateModified"
                    >
                      {dateFormat(modified_date, "yyyy-MM-dd")}
                    </time>
                  </li>
                )
              }
              <li>
                <ul>
                  {
                    categories.sort().map((category: string) => (
                      <li class="mr-2 inline-block">
                        {/* prettier-ignore */}
                        <a href={`/categories/${slugify(category)}`} class="category">{humanize(category)}</a>
                      </li>
                    ))
                  }
                </ul>
              </li>
            </ul>
            <div
              class="content blog-article mb-16 text-left"
              itemprop="articleBody"
            >
              <Content />
              {/* <Markdown content={post.body} components={shortcodes} /> */}
            </div>
          </article>
        </div>
      </div>
    </div>
  </div>
</section>
